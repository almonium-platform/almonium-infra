# Creates deployment directory
- name: "Ensure deployment directory exists for {{ DEPLOY_SLOT }}"
  ansible.builtin.file:
    path: "/home/almonium/deploy_slots/{{ DOCKER_COMPOSE_PROJECT_NAME }}/{{ DEPLOY_SLOT }}"
    state: directory
    mode: '0755'
    become: true

# Creates docker-compose.yaml from template
- name: "Template Docker Compose file for {{ DEPLOY_SLOT }}"
  ansible.builtin.template:
    src: app-compose.yaml.j2
    dest: "/home/almonium/deploy_slots/{{ DOCKER_COMPOSE_PROJECT_NAME }}/{{ DEPLOY_SLOT }}/docker-compose.yaml"
    mode: '0644'
    become: true

# Pulls the new image
- name: "Pull Docker image for {{ DEPLOY_SLOT }}"
  community.docker.docker_image:
    name: "ghcr.io/almonium-platform/almonium-be:{{ DEPLOY_IMAGE_TAG }}"
    source: pull
  register: pull_result
  retries: 3
  delay: 10
  until: pull_result is succeeded

# Deploys the container
- name: "Deploy app service for {{ DEPLOY_SLOT }}"
  community.docker.docker_compose_v2:
    project_src: "/home/almonium/deploy_slots/{{ DOCKER_COMPOSE_PROJECT_NAME }}/{{ DEPLOY_SLOT }}"
    state: present
    remove_orphans: true
    pull: "never"

# Waits for the application to be healthy
- name: "Wait for {{ DEPLOY_SLOT }} to become healthy"
  ansible.builtin.uri:
    url: "http://127.0.0.1:{{ LOCAL_HEALTHCHECK_PORT }}/api/v1/actuator/health"
  register: health_check_result
  until: health_check_result.json is defined and health_check_result.json.status == "UP"
  retries: 60
  delay: 3
  ignore_errors: true

# Fails the deployment if the health check doesn't pass in time
- name: "Fail if health check did not succeed for {{ DEPLOY_SLOT }}"
  ansible.builtin.fail:
    msg: |
      Health check failed for {{ DOCKER_COMPOSE_PROJECT_NAME }}_{{ DEPLOY_SLOT }} on port {{ LOCAL_HEALTHCHECK_PORT }}.
      Application did not report 'UP' status. Last response: {{ health_check_result.content | default('No content') }}
  when: health_check_result.json is not defined or health_check_result.json.status != "UP"
