networks:
  db-net:
    external: true

volumes:
  pgdata:
  pgbackups:

services:
  postgres:
    image: postgres:16
    container_name: postgres_${DEPLOY_ENVIRONMENT:-prod}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: >
      postgres -c max_connections=200
               -c shared_buffers=6GB
               -c effective_cache_size=16GB
               -c work_mem=32MB
               -c maintenance_work_mem=1GB
               -c wal_compression=on
               -c checkpoint_timeout=15min
               -c max_wal_size=4GB
               -c random_page_cost=1.1
               -c effective_io_concurrency=200
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /opt/db/backups:/backups
      - /opt/db/init:/docker-entrypoint-initdb.d
    networks:
      - db-net
    restart: unless-stopped

  pgbouncer:
    image: edoburu/pgbouncer:v1.24.1-p1
    container_name: pgbouncer_${DEPLOY_ENVIRONMENT:-prod}
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 500
      DEFAULT_POOL_SIZE: 50
      LISTEN_PORT: 6432
    depends_on:
      - postgres
    expose:
      - "6432"
    networks:
      - db-net
    restart: unless-stopped
